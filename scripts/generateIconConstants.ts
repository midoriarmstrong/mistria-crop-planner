import { Seasons } from '../src/constants/enums/Seasons';
import { CROPS_BY_ID } from '../src/constants/tables/Crops';
import fs from 'fs/promises';
import capitalize from 'lodash/capitalize';

class File {
  private _lines: string[] = [];

  constructor(private readonly _path: string) {}

  addLine(line: string = '') {
    this._lines.push(line);
  }

  addCommentLine(comment: string) {
    this.addLine(`/** ${comment} */`);
  }

  addImportLine(variable: string, path: string) {
    this.addLine(`import ${variable} from '${path}'`);
  }

  addAssetImportLine(
    asset: string,
    subpath: string,
    extension: string = 'webp',
  ) {
    this.addImportLine(asset, `../assets/${subpath}/${asset}.${extension}`);
  }

  addConst(variable: string, values: string[]) {
    this.addLine(`export const ${variable} = {`);
    this.addLine(values.join(','));
    this.addLine('} as const');
  }

  async save() {
    await fs.writeFile(this._path, this._lines.join('\n'));
  }
}

function standardizeFileName(fileName: string) {
  return capitalize(fileName.toLocaleLowerCase().replace(/ /g, '_'));
}

async function main() {
  const file = new File('./src/constants/icon-constants.ts');
  file.addCommentLine(
    'THIS FILE IS AUTOGENERATED. REGENERATE THROUGH npm run generate:constants:icons',
  );
  file.addLine();

  file.addLine('import { Seasons } from \'./enums/Seasons\'');
  file.addLine('import type { ReadonlyDeep } from \'type-fest\'');
  file.addLine();

  file.addCommentLine('Season icons');
  Object.values(Seasons).forEach((season) => {
    file.addAssetImportLine(season, 'seasons', 'png');
  });
  file.addLine();

  file.addCommentLine('Seed icons');
  Object.keys(CROPS_BY_ID).forEach((cropId) => {
    file.addAssetImportLine(`${standardizeFileName(cropId)}_seed`, 'seeds');
  });
  file.addLine();

  file.addCommentLine('Crop icons');
  Object.keys(CROPS_BY_ID).forEach((cropId) => {
    file.addAssetImportLine(`${standardizeFileName(cropId)}`, 'crops');
  });
  file.addLine();

  file.addConst(
    'ICONS_BY_SEASON',
    Object.values(Seasons).map((season) => `[Seasons.${season}]: ${season}`),
  );
  file.addLine();

  file.addConst(
    'CROP_ICONS_BY_CROP_ID: ReadonlyDeep<Record<string, string>>',
    Object.keys(CROPS_BY_ID).map(
      (cropId) => `'${cropId}': ${standardizeFileName(cropId)}`,
    ),
  );
  file.addLine();

  file.addConst(
    'SEED_ICONS_BY_CROP_ID: ReadonlyDeep<Record<string, string>>',
    Object.keys(CROPS_BY_ID).map(
      (cropId) => `'${cropId}': ${standardizeFileName(cropId)}_seed`,
    ),
  );
  file.addLine();

  await file.save();
}

main();
